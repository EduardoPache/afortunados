---

import { Image } from "astro:assets";
import { Swiper } from 'swiper'



import jaco from "/Imagenes/jaco.jpg";
import manuelantonio from "/Imagenes/manuelantonio.jpg";
import tamarindo from "/Imagenes/jaco.jpg";
import lafortuna from "/Imagenes/lafortuna.jpg";
import monteverde from "/Imagenes/monteverde.jpg";
import destinations from "../Data/destinations.json";

const images = [
  {
    id:1,
    src: monteverde,
    title: "MONTEVERDE",
    subtitle: "COSTA RICA - BOSQUE NUBOSO",
  },
  {
    id:2,
    src: manuelantonio,
    title: "MANUEL ANTONIO",
    subtitle: "COSTA RICA - PLAYA",
  },
  {
    id:3,
    src: jaco,
    title: "JACÃ“",
    subtitle: "COSTA RICA - PLAYA"
  },
  {
    id:4,
    src: lafortuna,
    title: "LA FORTUNA",
    subtitle: "COSTA RICA - BOSQUE" },
  {
    id:5,
    src: tamarindo,
    title: "Tamarindo",
    subtitle: "COSTA RICA - BOSQUE NUBOSO",
  },
];
---
<style>
body {
  position: relative;
  height: 100%;
}

body {
  background: #222;
  font-family: sans-serif;
  line-height: 1.35;
  margin: 0;
  padding: 0;
}
.hero {
  --border-radius: 12px;
  --transition-duration: 1000ms;
  position: relative;
  width: 100%;
  height: 100vh;
}

.hero__fullsize {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 0;
}

.hero__content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  filter: drop-shadow(0 5px 5px #0007);
  transition:
    top var(--transition-duration), 
    left var(--transition-duration), 
    width var(--transition-duration), 
    height var(--transition-duration),
    border-radius var(--transition-duration),
    transform var(--transition-duration),
    opacity var(--transition-duration);
}

.hero__content--hidden {
  visibility: hidden;
  transition: none;
  transform: none;
  opacity: 1;
  z-index: 0;
}

.hero__content--bottom {
  opacity: 0;
  transform: scale(1.5);
  z-index: 1;
}

.hero__content--top {
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  border-radius: 0;
  z-index: 2;
}

/* curtain */

.hero__content--show-text::before {
  transform: translateX(0);
  transition: transform 300ms;
}

.hero__content--grow::before {
  transform: translateX(-100%);
  transition: none;
}

/* title */
.hero__content--show-text .content__title {
  transform: translateY(0);
  transition: transform 300ms;
}

.hero__content--show-text .content__title .word {
  clip-path: inset(0);
  transition: clip-path 300ms;
}

.hero__content--grow .content__title {
  visibility: hidden;
  transform: translateY(48px);
  transition: none;
}

.hero__content--grow .content__title .word {
  clip-path: inset(0 0 48px);
  transition: none;
}

/* desc */

.hero__content--show-text .content__desc {
  transform: translateY(0px);
  transition: transform 300ms;
}

.hero__content--show-text .content__desc .word {
  clip-path: inset(0);
  transition: clip-path 300ms;
}

.hero__content--grow .content__desc {
  visibility: hidden;
  transform: translateY(18px);
  transition: none;
}

.hero__content--grow .content__desc .word {
  clip-path: inset(0 0 18px);
  transition: none;
}

.hero__swiper {
  position: absolute;
  width: 70%;
  aspect-ratio: 2.5 / 1;
  right: 0px;
  bottom: 50px;
  padding: 15px 0;
  z-index: 1;
  user-select: none;
}

.swiper {
  --swiper-navigation-size: 20px;
  visibility: hidden;
}

.swiper.swiper-initialized {
  visibility: visible;
}

.swiper-slide-prev,
.swiper-slide-active {
  opacity: 0;
}

.swiper-slide {
  display: flex;
}

.content {
  display: flex;
  position: relative;
  width: 100%;
  filter: drop-shadow(0 5px 5px #0007);
  overflow: hidden;
  z-index: 0;
}

.content--slide {
  position: relative;
  border-radius: var(--border-radius, 0);
}

.content__text {
  display: flex;
  flex-direction: column;
  width: 100%;
  color: #fff;
}

.content__desc {
  margin: 0;
}

.content--slide .content__title {
  font-size: 12px;
  margin: auto 0 0;
  padding: 0.35em 0.75em;
  background-color: #fff;
}

.content--slide .content__desc {
  position: absolute;
  left: 0;
  visibility: hidden;
}

.content--hero {
  padding: 100px 50px 0;
  position: absolute;
  border-radius: 0;
}

.content--hero::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, hsl(49deg 70% 5% / 67%), transparent);
  pointer-events: none;
  z-index: -1;
}

.content--hero .content__title {
  font-size: 42px;
  margin: 0 0 0.2em;
}

.content--hero .content__text {
  width: 45%;
}

.content__image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: -2;
}

.swiper-button-next {
  right: auto !important;
  left: calc((100% - 25px * 2) / 3.5);
  top: calc(50% - 20px) !important;
  width: 40px;
  height: 40px;
  background-color: #fffb;
  border-radius: 50%;
  color: forestgreen;
}
</style>

<div class="hero">
    <div class="hero__fullsize"></div>
    
    <div class="hero__swiper swiper">
      <div class="swiper-wrapper">

        {
            images.map((img) => (
            <div class="swiper-slide">
          <div class="content content--slide">

            <Image
                class="content__image"
                src={img.src}
                alt={img.title} >

            <div class="content__text">
              <h2 class="content__title text-xl font-bold">{img.title}</h2>
              <p class="content__desc text-xl font-bold">{img.subtitle}</p>
            </div>

          </div>
        </div>
        </div>
        ))
        }

      </div>

      <div class="swiper-button-next"></div>
    </div>
  </div>

  <script>

import Swiper from 'https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.esm.browser.min.js';

import Splitting from "https://cdn.skypack.dev/splitting@1.0.6";

const heroEl = document.querySelector(".hero");
const fullSizeWrapEl = heroEl.querySelector(".hero__fullsize");
const contentEls = heroEl.querySelectorAll(".swiper .content");
const contentFullsizeEls = Array.from(contentEls, (el) => {
  const clone = el.cloneNode(true);
  Splitting({ target: clone, by: "words" });
  clone.classList.add(
    "hero__content",
    "hero__content--hidden",
    "content--hero"
  );
  clone.classList.remove("content--slide");
  return clone;
});

contentFullsizeEls.forEach((el) => fullSizeWrapEl.appendChild(el));

const state = {
  topContent: null,
  bottomContent: null
};

function slideChange(swiper) {
  const total = swiper.slides.length - swiper.loopedSlides * 2;
  const contentIndex = (swiper.activeIndex - swiper.loopedSlides) % total;

  const content = contentFullsizeEls[contentIndex];
  if (!content) return;

  if (state.bottomContent) {
    state.bottomContent.classList.remove("hero__content--bottom");
    state.bottomContent.classList.add("hero__content--hidden");
  }

  if (state.topContent) {
    state.topContent.classList.remove("hero__content--top");
    state.topContent.classList.add("hero__content--bottom");
  }

  state.bottomContent = state.topContent;
  state.topContent = content;

  const slidetRect = swiper.slides[swiper.activeIndex].getBoundingClientRect();
  const parentRect = heroEl.getBoundingClientRect();

  content.style.transition = "none";
  content.style.left = slidetRect.left - parentRect.left + "px";
  content.style.top = slidetRect.top - parentRect.top + "px";
  content.style.width = slidetRect.width + "px";
  content.style.height = slidetRect.height + "px";
  content.style.borderRadius = "var(--border-radius, 0)";

  content.getBoundingClientRect();

  content.classList.remove("hero__content--hidden");
  content.classList.add("hero__content--top", "hero__content--grow");

  content.style.transition = "";
  content.style.left = "";
  content.style.top = "";
  content.style.width = "";
  content.style.height = "";
  content.style.borderRadius = "";

  const onShowTextEnd = (event) => {
    if (event.target !== event.currentTarget) {
      event.currentTarget.classList.remove("hero__content--show-text");
      event.currentTarget.removeEventListener("transitionend", onShowTextEnd);
    }
  };

  const onGrowEnd = (event) => {
    event.currentTarget.classList.remove("hero__content--grow");
    event.currentTarget.classList.add("hero__content--show-text");
    event.currentTarget.addEventListener("transitionend", onShowTextEnd);
  };

  content.addEventListener("transitionend", onGrowEnd, { once: true });
}

function swiperInit(swiper) {
  const total = swiper.slides.length - swiper.loopedSlides * 2;
  const contentIndex = (swiper.activeIndex - swiper.loopedSlides) % total;

  const content = contentFullsizeEls[contentIndex];
  if (!content) return;

  content.classList.remove("hero__content--hidden");
  content.classList.add("hero__content--top");
  state.topContent = content;
}

const swiper = new Swiper(".swiper", {
  slidesPerView: 3.5,
  spaceBetween: 25,
  loop: true,
  speed: 2000,
  simulateTouch: false,

  autoplay: {
    delay: 2000
  },

  navigation: {
    nextEl: ".swiper-button-next",
    prevEl: ".swiper-button-prev"
  },
  on: { realIndexChange: slideChange, init: swiperInit }
});
  </script>